{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///TextInput.min.js","webpack:///webpack/bootstrap 9f12deb2e1b1918050fc","webpack:///./src/TextInput.jsx","webpack:///./src/nodeHeight.js","webpack:///./src/text-input.css","webpack:///external \"React\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","length","descriptor","key","protoProps","staticProps","_react","_react2","_nodeHeight","_nodeHeight2","_textInput","_textInput2","TextInput","_React$Component","_this","getPrototypeOf","state","focus","height","minHeight","Infinity","maxHeight","calculateHeight","bind","handleFocus","handleBlur","handleChange","handleKeyDown","handleEnterKey","window","addEventListener","clearTimeout","updateId","setTimeout","removeEventListener","event","editable","setState","onFocus","onBlur","onChange","keyCode","onKeyDown","multiline","shiftKey","preventDefault","onEnterKeyDown","refs","input","minRows","maxRows","classes","container","className","defaultValue","valueIsNotEmpty","push","active","label","hasLabel","validate","success","error","filter","cla","join","trim","styles","Math","max","overflow","createElement","classNames","fieldContainer","placeholder","tabIndex","onDragStart","onDragEnd","onDragOver","field","ref","disabled","style","onClick","Component","defaultProps","calculateNodeStyling","node","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","sizingStyle","SIZING_STYLE","map","name","nodeInfo","nodeHeight","uiTextNode","arguments","undefined","hiddenTextarea","document","body","appendChild","_calculateNodeStyling","setAttribute","HIDDEN_TEXTAREA_STYLE","result","scrollHeight","singleRowHeight","modifiers","fn","prop","modifier","forEach","mod","rowHeight"],"mappings":"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","file":"TextInput.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"React\")) : factory(root[\"React\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"React\")) : factory(root[\"React\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _nodeHeight = __webpack_require__(1);\n\t\n\tvar _nodeHeight2 = _interopRequireDefault(_nodeHeight);\n\t\n\tvar _textInput = __webpack_require__(2);\n\t\n\tvar _textInput2 = _interopRequireDefault(_textInput);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TextInput = function (_React$Component) {\n\t  _inherits(TextInput, _React$Component);\n\t\n\t  function TextInput(props) {\n\t    _classCallCheck(this, TextInput);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TextInput.__proto__ || Object.getPrototypeOf(TextInput)).call(this, props));\n\t\n\t    _this.state = {\n\t      focus: false,\n\t      height: null,\n\t      minHeight: -Infinity,\n\t      maxHeight: Infinity\n\t    };\n\t\n\t    _this.calculateHeight = _this.calculateHeight.bind(_this);\n\t    _this.handleFocus = _this.handleFocus.bind(_this);\n\t    _this.handleBlur = _this.handleBlur.bind(_this);\n\t    _this.handleChange = _this.handleChange.bind(_this);\n\t    _this.handleKeyDown = _this.handleKeyDown.bind(_this);\n\t    _this.handleEnterKey = _this.handleEnterKey.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TextInput, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.calculateHeight();\n\t      window.addEventListener('resize', this.calculateHeight);\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps() {\n\t      // Render the content and then update the state/height\n\t      clearTimeout(this.updateId);\n\t      this.updateId = setTimeout(this.calculateHeight, 0);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      clearTimeout(this.updateId);\n\t      window.removeEventListener('resize', this.calculateHeight);\n\t    }\n\t  }, {\n\t    key: 'handleFocus',\n\t    value: function handleFocus(event) {\n\t      if (!this.props.editable) {\n\t        return;\n\t      }\n\t      this.setState({\n\t        focus: true\n\t      });\n\t      if (typeof this.props.onFocus === 'function') {\n\t        this.props.onFocus(event);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'handleBlur',\n\t    value: function handleBlur(event) {\n\t      this.setState({\n\t        focus: false\n\t      });\n\t      if (typeof this.props.onBlur === 'function') {\n\t        this.props.onBlur(event);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'handleChange',\n\t    value: function handleChange(event) {\n\t      this.calculateHeight();\n\t\n\t      if (typeof this.props.onChange === 'function') {\n\t        this.props.onChange(event);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'handleKeyDown',\n\t    value: function handleKeyDown(event) {\n\t      if (event.key === 'Enter' || event.keyCode === 13) {\n\t        this.handleEnterKey(event);\n\t      }\n\t      if (typeof this.props.onKeyDown === 'function') {\n\t        this.props.onKeyDown(event);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'handleEnterKey',\n\t    value: function handleEnterKey(event) {\n\t      if (!(this.props.multiline && event.shiftKey)) {\n\t        // prevent new line if not Shift + Enter\n\t        event.preventDefault();\n\t      }\n\t      if (typeof this.props.onEnterKeyDown === 'function') {\n\t        this.props.onEnterKeyDown(event);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Calculate the height of the node and update the state\n\t     */\n\t\n\t  }, {\n\t    key: 'calculateHeight',\n\t    value: function calculateHeight() {\n\t      var state = (0, _nodeHeight2.default)(this.refs.input, this.props.minRows, this.props.maxRows);\n\t      this.setState(state);\n\t    }\n\t\n\t    /**\n\t    * Get css class names for the component for it's different states\n\t    * @return {String}\n\t    */\n\t\n\t  }, {\n\t    key: 'classNames',\n\t    value: function classNames() {\n\t      var classes = ['text-input', _textInput2.default.container, this.props.className];\n\t\n\t      var value = this.props.value || this.props.defaultValue;\n\t      var valueIsNotEmpty = value && value.length > 0;\n\t\n\t      if (this.state.focus || valueIsNotEmpty) {\n\t        classes.push(_textInput2.default.active);\n\t      }\n\t\n\t      if (this.state.focus) {\n\t        classes.push(_textInput2.default.focus);\n\t      }\n\t\n\t      if (this.props.label) {\n\t        classes.push(_textInput2.default.hasLabel);\n\t      }\n\t\n\t      if (valueIsNotEmpty && typeof this.props.validate === 'function') {\n\t        if (this.validate(this.props.value)) {\n\t          classes.push(_textInput2.default.success);\n\t        } else {\n\t          classes.push(_textInput2.default.error);\n\t        }\n\t      }\n\t\n\t      return classes.filter(function (cla) {\n\t        return typeof cla === 'string' && cla.length;\n\t      }).join(' ').trim();\n\t    }\n\t\n\t    /**\n\t     * If we have a validate function call it\n\t     * @param  {Mixed} value\n\t     * @return {Boolean}\n\t     */\n\t\n\t  }, {\n\t    key: 'validate',\n\t    value: function validate(value) {\n\t      if (typeof this.props.validate !== 'function') {\n\t        return true;\n\t      }\n\t      return this.props.validate(value);\n\t    }\n\t\n\t    /**\n\t     * Render\n\t     * @return {React}\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var props = this.props;\n\t      var styles = { props: props };\n\t\n\t      styles.height = this.state.height;\n\t\n\t      var maxHeight = Math.max(styles.maxHeight ? styles.maxHeight : -Infinity, this.state.maxHeight);\n\t\n\t      // Hide scrollbar if we don't need it\n\t      if (maxHeight >= this.state.height) {\n\t        styles.overflow = 'hidden';\n\t      } else {\n\t        styles.overflow = 'auto';\n\t      }\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: this.classNames() },\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: _textInput2.default.fieldContainer },\n\t          _react2.default.createElement('textarea', {\n\t            placeholder: this.props.placeholder,\n\t            tabIndex: this.props.tabIndex,\n\t            onDragStart: this.props.onDragStart,\n\t            onDragEnd: this.props.onDragEnd,\n\t            onDragOver: this.props.onDragOver,\n\t            className: 'text-input--field ' + _textInput2.default.field,\n\t            ref: 'input',\n\t            disabled: this.props.disabled || !this.props.editable,\n\t            style: styles,\n\t            value: this.props.value,\n\t            onClick: this.props.onClick,\n\t            onFocus: this.handleFocus,\n\t            onBlur: this.handleBlur,\n\t            onChange: this.handleChange,\n\t            onKeyDown: this.handleKeyDown\n\t          }),\n\t          this.props.label ? _react2.default.createElement(\n\t            'label',\n\t            { className: 'text-input--label ' + _textInput2.default.label },\n\t            this.props.label\n\t          ) : null\n\t        ),\n\t        this.props.error ? _react2.default.createElement(\n\t          'label',\n\t          { className: 'text-input--error ' + _textInput2.default.error },\n\t          this.props.error\n\t        ) : null\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TextInput;\n\t}(_react2.default.Component);\n\t\n\t/**\n\t * Defaults\n\t * @type {Object}\n\t */\n\t\n\t\n\texports.default = TextInput;\n\tTextInput.defaultProps = {\n\t  editable: true,\n\t  value: '',\n\t  label: null\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Stypes to hide the text input\n\t * @type {String}\n\t */\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = nodeHeight;\n\tvar HIDDEN_TEXTAREA_STYLE = '\\n  height:0;\\n  visibility:hidden;\\n  overflow:hidden;\\n  position:absolute;\\n  z-index:-1000;\\n  top:0;\\n  right:0\\n';\n\t\n\tvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\n\t\n\t/**\n\t * Reference to text area we use to calculate the styles\n\t */\n\tvar hiddenTextarea = void 0;\n\t\n\tfunction calculateNodeStyling(node) {\n\t  if (!node) {\n\t    throw new TypeError('InvalidArgument: missing argument');\n\t  }\n\t  var style = window.getComputedStyle(node);\n\t\n\t  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n\t\n\t  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n\t\n\t  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n\t\n\t  var sizingStyle = SIZING_STYLE.map(function (name) {\n\t    return name + ':' + style.getPropertyValue(name);\n\t  }).join(';');\n\t\n\t  var nodeInfo = {\n\t    sizingStyle: sizingStyle,\n\t    paddingSize: paddingSize,\n\t    borderSize: borderSize,\n\t    boxSizing: boxSizing\n\t  };\n\t\n\t  return nodeInfo;\n\t}\n\t\n\tfunction nodeHeight(uiTextNode) {\n\t  var minRows = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t  var maxRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t\n\t  if (!hiddenTextarea) {\n\t    hiddenTextarea = document.createElement('textarea');\n\t    document.body.appendChild(hiddenTextarea);\n\t  }\n\t\n\t  // Copy all CSS properties that have an impact on the height of the content in\n\t  // the textbox\n\t\n\t  var _calculateNodeStyling = calculateNodeStyling(uiTextNode),\n\t      paddingSize = _calculateNodeStyling.paddingSize,\n\t      borderSize = _calculateNodeStyling.borderSize,\n\t      boxSizing = _calculateNodeStyling.boxSizing,\n\t      sizingStyle = _calculateNodeStyling.sizingStyle;\n\t\n\t  // Need to have the overflow attribute to hide the scrollbar otherwise\n\t  // text-lines will not calculated properly as the shadow will technically be\n\t  // narrower for content\n\t\n\t\n\t  hiddenTextarea.setAttribute('style', sizingStyle + ';' + HIDDEN_TEXTAREA_STYLE);\n\t  hiddenTextarea.value = uiTextNode.value ? uiTextNode.value : '';\n\t\n\t  var result = {\n\t    minHeight: -Infinity,\n\t    maxHeight: Infinity,\n\t    height: hiddenTextarea.scrollHeight\n\t  };\n\t\n\t  if (boxSizing === 'border-box') {\n\t    // border-box: add border, since height = content + padding + border\n\t    result.height = result.height + borderSize;\n\t  } else if (boxSizing === 'content-box') {\n\t    // remove padding, since height = content\n\t    result.height = result.height - paddingSize;\n\t  }\n\t\n\t  // measure height of a textarea with a single row\n\t  hiddenTextarea.value = '';\n\t  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\t\n\t  var modifiers = [{\n\t    fn: 'max',\n\t    value: maxRows,\n\t    prop: 'maxHeight'\n\t  }, {\n\t    fn: 'min',\n\t    value: minRows,\n\t    prop: 'minHeight'\n\t  }];\n\t\n\t  modifiers.filter(function (modifier) {\n\t    return modifier.value !== null;\n\t  }).forEach(function (mod) {\n\t    var rowHeight = singleRowHeight * mod.value;\n\t    if (boxSizing === 'border-box') {\n\t      rowHeight = rowHeight + paddingSize + borderSize;\n\t    }\n\t    result.height = Math[mod.fn](rowHeight, result.height);\n\t    result[mod.prop] = rowHeight;\n\t  });\n\t\n\t  return result;\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\tmodule.exports = {\"container\":\"text-input--container\",\"focus\":\"text-input--focus\",\"fieldContainer\":\"text-input--fieldContainer\",\"error\":\"text-input--error\",\"success\":\"text-input--success\",\"field\":\"text-input--field\",\"label\":\"text-input--label\",\"active\":\"text-input--active\",\"hasLabel\":\"text-input--hasLabel\"};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// TextInput.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9f12deb2e1b1918050fc","'use strict';\n\nimport React from 'react';\n\nimport nodeHeight from './nodeHeight';\n\nimport css from './text-input.css';\n\nexport default class TextInput extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focus: false,\n      height: null,\n      minHeight: -Infinity,\n      maxHeight: Infinity\n    }\n\n    this.calculateHeight = this.calculateHeight.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleEnterKey = this.handleEnterKey.bind(this);\n  }\n\n  componentDidMount() {\n    this.calculateHeight();\n    window.addEventListener('resize', this.calculateHeight);\n  }\n\n  componentWillReceiveProps() {\n    // Render the content and then update the state/height\n    clearTimeout(this.updateId);\n    this.updateId = setTimeout(this.calculateHeight, 0);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.updateId);\n    window.removeEventListener('resize', this.calculateHeight);\n  }\n\n  handleFocus(event) {\n    if (!this.props.editable) {\n      return;\n    }\n    this.setState({\n      focus: true\n    });\n    if (typeof this.props.onFocus === 'function') {\n      this.props.onFocus(event);\n    }\n  }\n\n  handleBlur(event) {\n    this.setState({\n      focus: false\n    });\n    if (typeof this.props.onBlur === 'function') {\n      this.props.onBlur(event);\n    }\n  }\n\n  handleChange(event) {\n    this.calculateHeight();\n\n    if (typeof this.props.onChange === 'function') {\n      this.props.onChange(event);\n    }\n  }\n\n  handleKeyDown(event) {\n    if (event.key === 'Enter' || event.keyCode === 13) {\n      this.handleEnterKey(event);\n    }\n    if (typeof this.props.onKeyDown === 'function') {\n      this.props.onKeyDown(event);\n    }\n  }\n\n  handleEnterKey(event) {\n    if (!(this.props.multiline && event.shiftKey)) {\n      // prevent new line if not Shift + Enter\n      event.preventDefault();\n    }\n    if (typeof this.props.onEnterKeyDown === 'function') {\n      this.props.onEnterKeyDown(event);\n    }\n  }\n\n  /**\n   * Calculate the height of the node and update the state\n   */\n  calculateHeight() {\n    let state = nodeHeight(\n      this.refs.input,\n      this.props.minRows,\n      this.props.maxRows\n    );\n    this.setState(state);\n }\n\n  /**\n  * Get css class names for the component for it's different states\n  * @return {String}\n  */\n  classNames() {\n    let classes = ['text-input', css.container, this.props.className];\n\n    let value = this.props.value || this.props.defaultValue;\n    let valueIsNotEmpty = value && value.length > 0;\n\n    if (this.state.focus || valueIsNotEmpty) {\n     classes.push(css.active);\n    }\n\n    if (this.state.focus) {\n     classes.push(css.focus);\n    }\n\n    if (this.props.label) {\n      classes.push(css.hasLabel);\n    }\n\n    if (valueIsNotEmpty && typeof this.props.validate === 'function') {\n      if (this.validate(this.props.value)) {\n        classes.push(css.success);\n      } else {\n        classes.push(css.error);\n      }\n    }\n\n    return classes\n      .filter((cla) => typeof cla === 'string' && cla.length)\n      .join(' ')\n      .trim();\n  }\n\n  /**\n   * If we have a validate function call it\n   * @param  {Mixed} value\n   * @return {Boolean}\n   */\n  validate(value) {\n    if (typeof this.props.validate !== 'function') {\n      return true;\n    }\n    return this.props.validate(value);\n  }\n\n  /**\n   * Render\n   * @return {React}\n   */\n  render(){\n    let props = this.props;\n    let styles = { props };\n\n    styles.height = this.state.height;\n\n    let maxHeight = Math.max(styles.maxHeight ? styles.maxHeight : -Infinity, this.state.maxHeight);\n\n    // Hide scrollbar if we don't need it\n    if (maxHeight >= this.state.height) {\n      styles.overflow = 'hidden';\n    } else {\n      styles.overflow = 'auto';\n    }\n\n    return (\n      <div className={this.classNames()}>\n        <div className={css.fieldContainer}>\n          <textarea\n            placeholder={this.props.placeholder}\n            tabIndex={this.props.tabIndex}\n            onDragStart={this.props.onDragStart}\n            onDragEnd={this.props.onDragEnd}\n            onDragOver={this.props.onDragOver}\n            className={'text-input--field ' + css.field}\n            ref='input'\n            disabled={this.props.disabled || !this.props.editable}\n            style={styles}\n            value={this.props.value}\n            onClick={this.props.onClick}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyDown}\n          />\n          {this.props.label ?\n            <label className={'text-input--label ' + css.label}>\n              {this.props.label}\n            </label>\n          : null}\n        </div>\n        {this.props.error ?\n          <label className={'text-input--error ' + css.error}>\n            {this.props.error}\n          </label>\n        : null}\n      </div>\n    );\n  }\n}\n\n/**\n * Defaults\n * @type {Object}\n */\nTextInput.defaultProps = {\n  editable: true,\n  value: '',\n  label: null\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/TextInput.jsx","'use strict';\n\n/**\n * Stypes to hide the text input\n * @type {String}\n */\nconst HIDDEN_TEXTAREA_STYLE = `\n  height:0;\n  visibility:hidden;\n  overflow:hidden;\n  position:absolute;\n  z-index:-1000;\n  top:0;\n  right:0\n`;\n\nconst SIZING_STYLE = [\n  'letter-spacing',\n  'line-height',\n  'padding-top',\n  'padding-bottom',\n  'font-family',\n  'font-weight',\n  'font-size',\n  'text-rendering',\n  'text-transform',\n  'width',\n  'padding-left',\n  'padding-right',\n  'border-width',\n  'box-sizing'\n];\n\n/**\n * Reference to text area we use to calculate the styles\n */\nlet hiddenTextarea;\n\nfunction calculateNodeStyling(node) {\n  if (!node) {\n    throw new TypeError('InvalidArgument: missing argument');\n  }\n  let style = window.getComputedStyle(node);\n\n  let boxSizing = (\n    style.getPropertyValue('box-sizing') ||\n    style.getPropertyValue('-moz-box-sizing') ||\n    style.getPropertyValue('-webkit-box-sizing')\n  );\n\n  let paddingSize = (\n    parseFloat(style.getPropertyValue('padding-bottom')) +\n    parseFloat(style.getPropertyValue('padding-top'))\n  );\n\n  let borderSize = (\n    parseFloat(style.getPropertyValue('border-bottom-width')) +\n    parseFloat(style.getPropertyValue('border-top-width'))\n  );\n\n  let sizingStyle = SIZING_STYLE\n    .map(name => `${name}:${style.getPropertyValue(name)}`)\n    .join(';');\n\n  let nodeInfo = {\n    sizingStyle,\n    paddingSize,\n    borderSize,\n    boxSizing\n  };\n\n  return nodeInfo;\n}\n\nexport default function nodeHeight(uiTextNode, minRows = null, maxRows = null) {\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n  let {\n    paddingSize,\n    borderSize,\n    boxSizing,\n    sizingStyle\n  } = calculateNodeStyling(uiTextNode);\n\n  // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n  hiddenTextarea.setAttribute('style', sizingStyle + ';' + HIDDEN_TEXTAREA_STYLE);\n  hiddenTextarea.value = uiTextNode.value ? uiTextNode.value : '';\n\n  let result = {\n    minHeight: -Infinity,\n    maxHeight: Infinity,\n    height: hiddenTextarea.scrollHeight\n  }\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    result.height = result.height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    result.height = result.height - paddingSize;\n  }\n\n  // measure height of a textarea with a single row\n  hiddenTextarea.value = '';\n  let singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\n  const modifiers = [{\n    fn: 'max',\n    value: maxRows,\n    prop: 'maxHeight'\n  },\n  {\n    fn: 'min',\n    value: minRows,\n    prop: 'minHeight'\n  }];\n\n  modifiers\n    .filter((modifier) => modifier.value !== null)\n    .forEach((mod) => {\n      let rowHeight = singleRowHeight * mod.value;\n      if (boxSizing === 'border-box') {\n        rowHeight = rowHeight + paddingSize + borderSize;\n      }\n      result.height = Math[mod.fn](rowHeight, result.height);\n      result[mod.prop] = rowHeight;\n    });\n\n  return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/nodeHeight.js","// removed by extract-text-webpack-plugin\nmodule.exports = {\"container\":\"text-input--container\",\"focus\":\"text-input--focus\",\"fieldContainer\":\"text-input--fieldContainer\",\"error\":\"text-input--error\",\"success\":\"text-input--success\",\"field\":\"text-input--field\",\"label\":\"text-input--label\",\"active\":\"text-input--active\",\"hasLabel\":\"text-input--hasLabel\"};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/text-input.css\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"React\"\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}